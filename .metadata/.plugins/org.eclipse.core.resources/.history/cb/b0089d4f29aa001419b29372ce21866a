package com.articles.frontend.web.util;

import javax.servlet.http.HttpServletRequest;

import com.articles.frontend.web.handler.Constants;
import com.articles.frontend.web.handler.LanguageHandler;

public class Util {
	
	public static String getLanguage(HttpServletRequest request) {
		String language = Constants.DEFAULT_LANGUAGE;
		try {
			language = request.getParameter("language");
			if (language != null && !language.isEmpty()) {
				for (String availableLanguage : LanguageHandler.languages) {
					if (availableLanguage.equalsIgnoreCase(language)) {
						return availableLanguage;
					}
				}
				language = Constants.DEFAULT_LANGUAGE;
			} else {
				language = request.getSession().getAttribute("language").toString();
				if (language == null || language.length() != 2) {
					language = Constants.DEFAULT_LANGUAGE;
				}
			}
		} catch(Exception e) {
			language = Constants.DEFAULT_LANGUAGE;
		} finally {
			request.getSession().setAttribute("language", language);
		}
		return language;
	}

	public static String getColor(HttpServletRequest request) {
		String color = Constants.DEFAULT_COLOR;
		try {
			color = request.getParameter("language");
			if (color != null && !color.isEmpty()) {
				for (String availableColor : LanguageHandler.colors) {
					if (availableColor.equalsIgnoreCase(color)) {
						return availableColor;
					}
				}
				color = Constants.DEFAULT_COLOR;
			} else {
				color = request.getSession().getAttribute("language").toString();
				if (color == null || color.isEmpty()) {
					color = Constants.DEFAULT_COLOR;
				}
			}
		} catch(Exception e) {
			color = Constants.DEFAULT_COLOR;
		} finally {
			request.getSession().setAttribute("language", language);
		}
		return language;
	}
	
	public static String getColor(HttpServletRequest request) {
		try {
			String color = request.getParameter("color");
			if (color != null) {
				for (String availableColor : LanguageHandler.colors) {
					if (availableColor.equalsIgnoreCase(color)) {
						return availableColor;
					}
				}
				return Constants.DEFAULT_COLOR;
			} else {
				return Constants.DEFAULT_COLOR;
			}
		} catch(Exception e) {
			return Constants.DEFAULT_COLOR;
		}
	}

}
